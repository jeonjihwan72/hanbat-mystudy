plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
}

// SpringBoot의 version에 맞춰 의존 라이브러리 버전을 관리하는 플러그인
// 플러그인 자체 버전을 명시하지 않으므로써 버전이 고정되지 않고 유동적으로 버전이 자동으로 최신 버전을 유지한다.
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()  // 의존 라이브러리를 갖고 있는 중앙 저장소 서버의 주소를 지정한다.
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.12.1'     // test할 때 사용하는 라이브러리
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'    // 위와 동일
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)    // 자바 버전 최대 21까지의 function만을 수용하겠다.
        // 만약 21버전보다 위의 버전이 반영된다면 에러를 반환한다.
    }
}

jar {
    archiveFileName = 'myapp.jar'   // jar 생성하는 이름 변경
}

tasks.named('test') {
    useJUnitPlatform()  // test는 UnitPlatform을 사용한다.
}

tasks.withType(JavaExec) {
    systemProperty 'sun.stdout.encoding', 'UTF-8'   // 한글이 깨지는 경우 사용(출력 인코딩 UTF-8로 설정)
    systemProperty 'sun.stderr.encoding', 'UTF-8'   // 한글이 깨지는 경우 사용(에러 출력 인코딩 UTF-8로 설정)
}
